{"version":3,"file":"static/js/646.c8810b3e.chunk.js","mappings":"4PA4BA,EA1BmB,SAAC,GAAc,IAAbA,EAAY,EAAZA,OACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,SAACC,GACb,MAAyB,YAAtBH,EAASI,SACF,GAAN,OAAUD,GAER,UAAN,OAAiBA,EACpB,EAED,OACI,wBACKJ,EAAOM,KAAI,gBAAEF,EAAF,EAAEA,GAAIG,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,kBAAmBC,EAAtC,EAAsCA,MAAOC,EAA7C,EAA6CA,aAAcC,EAA3D,EAA2DA,eAA3D,OACR,yBACI,eAAGC,KAAMT,EAAQC,GAAKS,GAAIV,EAAQC,GAAKU,MAAO,CAAEC,KAAMd,GAAtD,WACI,gBAAKe,IAAG,yCAAoCT,GAAeU,IAAKR,EAAOS,MAAM,SAC7E,wBAAKP,KACL,yBAAG,sBAAoBH,MACvB,yBAAG,iBAAeE,SALjBN,EADD,KAYvB,E,oBCvBDe,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,WAAOC,GAAP,uFACRF,EAAAA,EAAAA,IAAU,mBAAoB,CACjDE,OAAAA,EACAC,OAAQ,CACJC,QAPA,mCAQAC,YAAa,UALU,cACzBC,EADyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,sDC6ChC,EA7Ca,WACT,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAkBC,EAAAA,EAAAA,UA8BxB,OA5BAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAqB,mCAAG,oGAEpBH,EAAgBI,SAClBJ,EAAgBI,QAAQC,QAG1BL,EAAgBI,QAAU,IAAIE,gBAE9BT,GAAW,GACXE,EAAS,MATe,SAWHd,EAAoBe,EAAgBI,QAAQlB,QAXzC,OAWlBrB,EAXkB,OAYxB8B,EAAc9B,GACdgC,GAAW,GAba,kDAeL,eAAf,KAAMU,OACRR,EAAS,uDACTF,GAAW,IAjBW,yBAoBtBA,GAAW,GApBW,6EAAH,qDAwB3BM,GACH,GAAE,KAGC,4BACI,wBAAI,6BACHP,IAAW,SAACY,EAAA,EAAD,KACVZ,GAAWF,EAAWe,OAAS,IAAK,SAAC,EAAD,CAAY5C,OAAQ6B,IACzDI,IAAS,yBAAMA,MAG3B,C","sources":["components/MoviesList/MoviesList.jsx","Services/Services.jsx","pages/Home/Home.jsx"],"sourcesContent":["import { useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({movies}) => {\n    const location = useLocation();\n\n    const cardURL = (id) => {\n        if(location.pathname === '/movies'){\n            return `${id}`;\n        }\n        return `movies/${id}`;\n    }\n\n    return (\n        <ul>\n            {movies.map(({id, poster_path, original_language, title, release_date, original_title }) => (\n                <li key={id}>\n                    <a href={cardURL(id)} to={cardURL(id)} state={{ from: location}}>\n                        <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} width=\"200\" />\n                        <h2>{original_title}</h2>\n                        <p>Original language: {original_language}</p>\n                        <p>Release date: {release_date}</p>\n                    </a>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nexport default MoviesList;","import axios from \"axios\";\n\nconst KEY = '46ee399c81006beac7a91a0ab15f7750';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (signal) => {\n    const response = await axios.get('trending/all/day', {\n        signal,\n        params: {\n            api_key: KEY,\n            time_window: 'week'\n        }\n    })\n    \n    return response.data.results;\n};\n\n","import Loader from \"components/Loader\";\nimport MoviesList from \"components/MoviesList\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { fetchTrendingMovies } from \"Services/Services\";\n\nconst Home = () => {\n    const [moviesList, setMoviesList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const abortController = useRef();\n\n    useEffect(() => {\n        const getTrendingWeekMovies = async () => {\n            try {\n              if (abortController.current) {\n                abortController.current.abort();\n              }\n          \n              abortController.current = new AbortController();\n          \n              setLoading(true);\n              setError(null);\n          \n              const movies = await fetchTrendingMovies(abortController.current.signal);\n              setMoviesList(movies);\n              setLoading(false);\n            } catch (error) {\n              if (error.name !== \"AbortError\") {\n                setError(\"Sorry, an error occurred :( Try reloading the page!\");\n                setLoading(false);\n              }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getTrendingWeekMovies();\n    }, []);\n\n    return(\n        <div>\n            <h1>This week's movie trends</h1>\n            {loading && <Loader />}\n            {!loading && moviesList.length > 0 && <MoviesList movies={moviesList} />}\n            {error && <div>{error}</div>}\n        </div>\n    )\n};\n\nexport default Home;"],"names":["movies","location","useLocation","cardURL","id","pathname","map","poster_path","original_language","title","release_date","original_title","href","to","state","from","src","alt","width","axios","fetchTrendingMovies","signal","params","api_key","time_window","response","data","results","useState","moviesList","setMoviesList","loading","setLoading","error","setError","abortController","useRef","useEffect","getTrendingWeekMovies","current","abort","AbortController","name","Loader","length"],"sourceRoot":""}