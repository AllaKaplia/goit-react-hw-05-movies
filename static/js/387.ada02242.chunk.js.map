{"version":3,"file":"static/js/387.ada02242.chunk.js","mappings":"kTAEMA,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,WAAOC,GAAP,uFACRF,EAAAA,EAAAA,IAAU,qBAAsB,CACnDE,OAAAA,EACAC,OAAQ,CACJC,QAASL,EACTM,SAAU,WALa,cACzBC,EADyB,yBASxBA,EAASC,KAAKC,SATU,2CAAH,sDAYnBC,EAAW,mCAAG,gGAASC,EAAT,EAASA,WAAYR,EAArB,EAAqBA,OAArB,SACAF,EAAAA,EAAAA,IAAU,eAAgB,CAC7CE,OAAAA,EACAC,OAAQ,CACJC,QAASL,EACTY,MAAOD,KALQ,cACjBJ,EADiB,yBAShBA,EAASC,KAAKC,SATE,2CAAH,sDAYXI,EAAiB,mCAAG,gGAASC,EAAT,EAASA,QAASX,EAAlB,EAAkBA,OAAlB,SACNF,EAAAA,EAAAA,IAAA,gBAAmBa,GAAW,CACjDX,OAAAA,EACAC,OAAQ,CACJC,QAASL,EACTM,SAAU,WALW,cACvBC,EADuB,yBAStBA,EAASC,MATa,2CAAH,sDAYjBO,EAAS,mCAAG,gGAASD,EAAT,EAASA,QAASX,EAAlB,EAAkBA,OAAlB,SACEF,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAsC,CACzDX,OAAAA,EACAC,OAAQ,CACJC,QAASL,EACTM,SAAU,WALG,cACfC,EADe,yBASdA,EAASC,KAAKQ,MATA,2CAAH,sDAYTC,EAAY,mCAAG,gGAASH,EAAT,EAASA,QAASX,EAAlB,EAAkBA,OAAlB,SACDF,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAsC,CACzDX,OAAAA,EACAC,OAAQ,CACJC,QAASL,EACTM,SAAU,WALM,cAClBC,EADkB,yBASjBA,EAASC,KAAKC,SATG,2CAAH,qD,kKCnDZS,E,QAAUC,EAAAA,IAAH,6I,SCsEpB,EAlEgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQZ,GAAYa,EAAAA,EAAAA,MAAZb,QACFc,GAAkBC,EAAAA,EAAAA,UAkCxB,OAhCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAElBH,EAAgBI,SAClBJ,EAAgBI,QAAQC,QAG1BL,EAAgBI,QAAU,IAAIE,gBAE9BV,GAAW,GACXE,EAAS,MATa,UAWOT,EAAAA,EAAAA,IAAa,CACxCH,QAASA,EACTX,OAAQyB,EAAgBI,QAAQ7B,SAbZ,OAWhBgC,EAXgB,OAgBtBb,EAAWa,GACXT,EAAS,MAjBa,kDAmBH,iBAAf,KAAMU,OACRV,EAAS,uDACTF,GAAW,IArBS,yBAwBtBA,GAAW,GAxBW,6EAAH,qDA4BvBO,GACD,GAAE,CAACjB,KAGF,2BACGS,IAAW,SAACc,EAAA,EAAD,KACVd,GAAWF,EAAQiB,OAAS,IAC5B,0BACE,wBACGjB,EAAQkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BAAI,WAASD,MACb,yBAAG,gBAAcC,OAFVF,EADE,SAUjBjB,GAA8B,IAAnBF,EAAQiB,SACnB,SAACpB,EAAD,UAAS,sDAKVO,IAAS,yBAAMA,EAAMkB,YAG3B,C","sources":["Services/Services.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '46ee399c81006beac7a91a0ab15f7750';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (signal) => {\n    const response = await axios.get('trending/movie/day', {\n        signal,\n        params: {\n            api_key: KEY,\n            language: 'en-US'\n        }\n    });\n    \n    return response.data.results;\n};\n\nexport const fetchMovies = async ({ nameMovies, signal }) => {\n    const response = await axios.get('search/movie', {\n        signal,\n        params: {\n            api_key: KEY,\n            query: nameMovies,\n        }\n    });\n\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async ({ movieId, signal }) => {\n    const response = await axios.get(`movie/${movieId}`, {\n        signal,\n        params: { \n            api_key: KEY,\n            language: 'en-US' \n        }\n    })\n\n    return response.data;\n}\n\nexport const fetchCast = async ({ movieId, signal }) => {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n        signal,\n        params: {\n            api_key: KEY,\n            language: 'en-US'\n        }\n    })\n\n    return response.data.cast;\n}\n\nexport const fetchReviews = async ({ movieId, signal }) => {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n        signal,\n        params: {\n            api_key: KEY,\n            language: 'en-US' \n        }\n    });\n\n    return response.data.results;\n}","import styled from '@emotion/styled';\n\nexport const Message = styled.div`\n    font-size: 25px;\n    color: green;\n    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n    margin-bottom: 30px;\n`;","import Loader from \"components/Loader\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchReviews } from \"Services/Services\";\nimport { Message } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const abortController = useRef();\n\n  useEffect(() => {\n    const getReviewsDetails = async () => {\n      try {\n        if (abortController.current) {\n          abortController.current.abort();\n        }\n\n        abortController.current = new AbortController();\n\n        setLoading(true);\n        setError(null);\n\n        const reviewsDetails = await fetchReviews({\n          movieId: movieId,\n          signal: abortController.current.signal,\n        });\n\n        setReviews(reviewsDetails);\n        setError(null);\n      } catch (error) {\n        if (error.code !== \"ERR_CANCELED\") {\n          setError(\"Sorry, an error occurred :( Try reloading the page!\");\n          setLoading(false);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getReviewsDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {!loading && reviews.length > 0 && (\n        <div>\n          <ul>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>Description: {content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      {!loading && reviews.length === 0 && (\n        <Message>\n          Sorry, there are no reviews for this movie yet :(\n        </Message>\n      )}\n\n      {error && <div>{error.message}</div>}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["KEY","axios","fetchTrendingMovies","signal","params","api_key","language","response","data","results","fetchMovies","nameMovies","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","Message","styled","useState","reviews","setReviews","loading","setLoading","error","setError","useParams","abortController","useRef","useEffect","getReviewsDetails","current","abort","AbortController","reviewsDetails","code","Loader","length","map","id","author","content","message"],"sourceRoot":""}