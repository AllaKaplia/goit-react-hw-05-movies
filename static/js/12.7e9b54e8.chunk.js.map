{"version":3,"file":"static/js/12.7e9b54e8.chunk.js","mappings":"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","sources":["Services/Services.jsx","components/GoBackLink/GoBackLink.jsx","components/DetailsNav/DetailsNav.jsx","pages/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '46ee399c81006beac7a91a0ab15f7750';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (signal) => {\n    const response = await axios.get('trending/all/day', {\n        signal,\n        params: {\n            api_key: KEY,\n            time_window: 'week'\n        }\n    });\n    \n    return response.data.results;\n};\n\nexport const fetchMovies = async ({ nameMovies, signal }) => {\n    const response = await axios.get('search/movie', {\n        signal,\n        params: {\n            api_key: KEY,\n            query: nameMovies,\n            include_adult: false,\n            page: 1,\n        }\n    });\n\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async ({ movieId, signal }) => {\n    const response = await axios.get(`movie/${movieId}`, {\n        signal,\n        params: {\n            api_key: KEY,\n        }\n    })\n\n    return response.data.results;\n}","import { NavLink } from \"react-router-dom\";\nimport { LiaStepBackwardSolid } from 'react-icons/lia';\n\n\nconst GoBackLink = ({ to }) => {\n    return (\n        <NavLink to={to}>\n            <LiaStepBackwardSolid />\n            <span>Go back</span>\n        </NavLink>\n    )\n}\n\nexport default GoBackLink;","import { NavLink } from \"react-router-dom\";\n\n\nconst DetailsNav = () => {\n    return (\n        <div>\n            <h2>Additional information</h2>\n            <ul>\n                <li>\n                    <NavLink to='cast'>Cast</NavLink>\n                </li>\n                <li>\n                    <NavLink to='reviews'>Reviews</NavLink>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default DetailsNav;","\n\nconst MovieInfo = ({ title, release, overview, genres, src, originalTitle, rating }) => {\n    return (\n        <div>\n            <img src={src} alt={originalTitle} />\n            <div>\n                <h1>{title} {release}</h1>\n                <p>User rating: {Math.floor(rating * 10)}%</p>\n                <h2>Overview</h2>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <ul>\n                    {genres.map(genre => \n                        <li key={genre.id}>{genre.name}</li>\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieInfo;","import { Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { useState,  useRef, useEffect } from \"react\";\nimport GoBackLink from \"components/GoBackLink\";\nimport { fetchMovieDetails } from \"Services/Services\";\nimport DetailsNav from \"components/DetailsNav\";\nimport { Suspense } from \"react\";\nimport Loader from \"components/Loader\";\nimport MovieInfo from \"pages/MovieInfo\";\n\n\nconst MovieDetails = () => {\n    const [moviesDetails, setMoviesDetails] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const abortController = useRef();\n    const { movieId } = useParams();\n\n    const location = useLocation();\n    const goBackLink = useRef(location?.state?.from ?? '/');\n\n    useEffect(() => {\n        const getMovieDetails = async () => {\n            try {\n                if (abortController.current) {\n                    abortController.current.abort();\n                }\n            \n                abortController.current = new AbortController();\n\n                setLoading(true);\n                setError(null);\n\n                const movieInfo = await fetchMovieDetails(movieId, abortController.current.signal);\n\n                setMoviesDetails(movieInfo);\n                console.log(movieInfo);\n                setError(null);\n\n            } catch (error) {\n                if (error.name !== \"AbortError\") {\n                    setError(\"Sorry, an error occurred :( Try reloading the page!\");\n                    setLoading(false);\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getMovieDetails();\n    }, [movieId]);\n\n    const { \n        title,\n        release_date,\n        overview,\n        genres,\n        poster_path,\n        original_title,\n        vote_average\n    } = moviesDetails || {};\n    \n    return (\n        <div>\n            <GoBackLink to={goBackLink.current}/>\n            {!loading && moviesDetails && title && release_date && overview && genres && poster_path && original_title && vote_average && (<MovieInfo\n                title={title}\n                release={release_date}\n                overview={overview}\n                genres={genres}\n                src={poster_path}\n                originalTitle={original_title}\n                rating={vote_average}\n            />)}\n\n            <DetailsNav />\n            {error && <div>{error}</div> }\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetails;"],"names":["KEY","axios","fetchTrendingMovies","signal","params","api_key","time_window","response","data","results","fetchMovies","nameMovies","query","include_adult","page","fetchMovieDetails","movieId","to","title","release","overview","genres","src","originalTitle","rating","alt","Math","floor","map","genre","name","id","useState","moviesDetails","setMoviesDetails","loading","setLoading","error","setError","abortController","useRef","useParams","location","useLocation","goBackLink","state","from","useEffect","getMovieDetails","current","abort","AbortController","movieInfo","console","log","release_date","poster_path","original_title","vote_average","Suspense","fallback","Loader"],"sourceRoot":""}